<?xml version="1.0"?>
<bindings
   xmlns="http://www.mozilla.org/xbl"
   xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
   xmlns:xbl="http://www.mozilla.org/xbl">
	<binding id="views">
		<content>
			<xul:menulist xbl:inherits="command,preference">
				<xul:menupopup>
					<xul:menuitem label="plain" value="none"/>
				</xul:menupopup>
			</xul:menulist>
		</content>
		<implementation>
			<constructor><![CDATA[
				var menulist = document.getAnonymousNodes(this)[0];
				var menupopup = menulist.firstChild;

				for(var view in colorediffsGlobal.views) {
					var item = document.createElement("menuitem");
					item.setAttribute("label", view);
					item.setAttribute("value", view);
					menupopup.appendChild(item);
				}

				if (menulist.hasAttribute('preference')) {
					var pref = document.getElementById(menulist.getAttribute('preference'));
					this.selectedItem = pref.valueFromPreferences;
				}
			]]></constructor>
			<property name="selectedItem">
				<getter><![CDATA[
					return document.getAnonymousNodes(this)[0].selectedItem.value;
				]]></getter>
				<setter><![CDATA[
					var menulist = document.getAnonymousNodes(this)[0];
					var items = menulist.firstChild.childNodes;
					for( var i=0; i < items.length; i++ ) {
						if ( items[i].getAttribute("value") == val ) {
							menulist.selectedItem = items[i];
							break;
						}
					}
				]]></setter>
			</property>
		</implementation>
	</binding>

	<binding id="color-picker">
		<resources>
			<stylesheet src="chrome://colorediffs/content/bindings/colorpicker.css"/>
		</resources>
		<content>
			<xul:button class="colorpickerbutton" xbl:inherits="preference">
				<xul:spacer class="colorpickerspacer" flex="1"/>
			</xul:button>
		</content>
		<implementation>
			<constructor><![CDATA[
				/*var button = document.getAnonymousNodes(this)[0];
				button.label = "ertetertw";
				/*if (button.hasAttribute('preference')) {
					var pref = document.getElementById(button.getAttribute('preference'));
					this.color = pref.valueFromPreferences;
				}*/
			]]></constructor>
			<property name="color">
				<getter><![CDATA[
					return document.getAnonymousNodes(this)[0].firstChild.style.backgroundColor;
				]]></getter>
				<setter><![CDATA[
					/*dump(document.getAnonymousNodes(this)[0].firstChild);*/
					document.getAnonymousNodes(this)[0].firstChild.style.backgroundColor = val;
					/*dump(val);*/
					//document.getAnonymousNodes(this)[0].style.color = val;
					//document.getAnonymousNodes(this)[0].setAttribute('label', val);
					//dump(document.getAnonymousNodes(this)[0].label);
				]]></setter>
			</property>
		</implementation>
		<handlers>
			<handler event="click" button="0"><![CDATA[
				var colorObj = { NoDefault:false, Type:"Page", TextColor:0, PageColor:0, Cancel:false };

				window.openDialog("chrome://editor/content/EdColorPicker.xul", "_blank", "chrome,close,titlebar,modal", "", colorObj);

				if (colorObj.Cancel) {
					return;
				}

				this.color = colorObj.BackgroundColor;
			]]></handler>
		</handlers>
	</binding>
</bindings>
